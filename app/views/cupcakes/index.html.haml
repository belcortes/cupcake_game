#scoreboard
  #cupcake_image
    %img(src="/cupcake_cross_section.jpeg")
  .score
    %h4#shapes
      To Make Your Cupcake, Catch A:
      /I was thinking to that when a correct ingredient is added, we can use .empty() to remove the text.
      %h5.cookie_text 
        * Cookie Base
      %h5.ic_text 
        * Ice Cream
      %h5.frosting_text 
        * Frosting
      %h5.topping_text 
        * Topping
    %br
    %h4#points 
      Current Points: 
 
    :javascript
      function calculate_points (){
        var points = 0;
        var add_points;

        if ($(".wrapper").prepend('.ingredient.cookie_base')){
          add_points = 50;
          points = 50;
        }
        if ($(".wrapper").prepend('.ingredient.cookie_base') && $(".wrapper").prepend('.ingredient.ice_cream')) {
          add_points = 100;
          points = parseInt(points) + parseInt(add_points)
        }
        if ($(".wrapper").prepend('.ingredient.cookie_base') && $(".wrapper").prepend('.ingredient.ice_cream') && $(".wrapper").prepend(.ingredient.frosting)) {
          add_points = 150;
          points = parseInt(points) + parseInt(add_points)
        }
        if ($(".wrapper").prepend('.ingredient.cookie_base') && $(".wrapper").prepend('.ingredient.ice_cream') && $(".wrapper").prepend(.ingredient.frosting) && $(".wrapper").prepend(.ingredient.topping)) {
          add_points = 200;
          points = parseInt(points) + parseInt(add_points)
        }
        return points;
      };
      / not sure how to go about printing the value of the js variable calculate_points in html
      documnet.write(calculate_points)  

.square#board
  .ingredient.draggable
    %p Cookie
  .ingredient.draggable{style: 'left: 41px;'}
    %p Ice Cream
  .ingredient.draggable{style: 'left: 82px'}
    %p Frosting    
  .wrapper.draggable.droppable
    %P Cupcake
  :javascript
    var wrapper_position;
    $(".ingredient").draggable({collide: 'flag'});
    $('.wrapper').draggable({axis: 'x', 
    containment: '#board',
    start: function(event,ui) {
      //replace this stuff with logic that retrieves the current position of the .wrapper
      console.log('event', event);
      console.log('ui',ui);
      wrapper_position = ui.position.left;
    }
    });
    $('.wrapper').droppable({
      drop: function( event, ui ) {
        $( this )
        .css({'background-color' : 'green'})
        .text($(ui.draggable).text())
        ui.draggable.fadeOut();
      }
    });   
    function drop_topping() {
      charIsFalling = true;
      $('.ingredient').animate({
          marginTop : ($('.ingredient').parent().height() - $('.wrapper.draggable.droppable').height() - $('.ingredient').height()) + 'px',
        }, {
          duration: 2000,
          easing: "linear",
      });
    }
    $(document).ready(function(){
      drop_topping();
    })

// if the right ingredient is on an x-axis position that matches the current wrapper_position, then append the ingredient to the wrapper. 
